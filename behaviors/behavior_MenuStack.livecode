script "behavior_MenuStack"
--> Events
-
-- on resumeStack
   menu_DisplayGlobalMenus
   pass resumeStack
end resumeStack

-- on preOpenCard
   menu_DisplayGlobalMenus
   pass preOpenCard
end preOpenCard

on resizeStack
   view_ResizeToCard 0
   pass resizeStack
end resizeStack

on preOpenCard
   put the short name of this card into cName
   set the title_Text of me to cName
   pass preOpenCard
end preOpenCard


--> MetaData
-
author: David Bovill
copyright: OPN Technologies LLP
name: View|Tree|Datagrid
type: view
version: 1.2

/*
View help text...
*/

getprop tree_View
   return the long id of me
end tree_View


--> Menu | Props
-
getprop menu_Version
   return 1
end menu_Version

getprop menu_Title
   put the long id of the target into targetObject
   put the view_Name of  targetObject into vName
   switch
      case vName contains "Field"
         return empty
         return "Tree | Field | Menu"
      default
         return "Menu | Stack | Menu"
   end switch
end menu_Title


--> Menu | Stack | Menu
-
on menu_DisplayMenuPalette
   go to stack "OPN Menu Manager"
end menu_DisplayMenuPalette

on _
end _

on menu_ScriptEditorMenu treeView, menuChoice
   menu_ClearPluginArray
   
   switch menuChoice
      case "Default Script Editor Menus"
         -- set the menu_Plugin of rev_ScriptEditorField() to "Global | Script | Editor | Menu"
         -- set the menu_Plugin of rev_HandlerTreeField() to "Global | Handler | Menu"
         menu_AddPlugin rev_ScriptEditorField(), "control", "Global | Script | Editor | Menu"
         menu_AddPlugin rev_HandlerTreeField(), "control", "Global | Handler | Menu"
         break
      case "Test Script Editor Menu"
         -- set the menu_Plugin of rev_ScriptEditorField() to "Global | Script | Editor | Test | Menu"
         menu_AddPlugin rev_ScriptEditorField(), "control", "Global | Script | Editor | Test | Menu"
         break
   end switch
   
   lcw_Notify merge ("Added the [[menuChoice]]!")
end menu_ScriptEditorMenu

on menu_AddScriptEditorMenus treeView, setName
   put the main_Name of rev_ScriptEditorField() into revScriptEditorField
   put the main_Name of rev_HandlerTreeField() into revHandlerTree
   put menu_ConstructPluginRecord ("Global | Script | Editor | Menu", false) into menuArray ["control"]["main_Name"][revScriptEditorField][1]
   put menu_ConstructPluginRecord ("Global | Handler | Menu", false) into menuArray ["control"]["main_Name"][revHandlerTree][1]
   
   library_StoreMenuArray menuArray, setName
end menu_AddScriptEditorMenus

on menu_AddTestEditorMenusToSet treeView, setName
   put the main_Name of rev_ScriptEditorField() into revScriptEditorField
   put the main_Name of rev_HandlerTreeField() into revHandlerTree
   put menu_ConstructPluginRecord ("Global | Script | Editor | Test | Menu", false) into menuArray ["control"]["main_Name"][revScriptEditorField][1]
   
   library_StoreMenuArray menuArray, setName
end menu_AddTestEditorMenusToSet

function menu_ConstructPluginRecord gMenuTitle, pPassMouseDown, pBeforeLineNum
   put gMenuTitle into mRecordArray ["mTitle"]
   put menu_GetGlobalController (gMenuTitle) into mController
   put the rugged_ID of mController into mRecordArray ["mController"]
   if pBeforeLineNum is empty then put 0 into pBeforeLineNum
   if pPassMouseDown is empty then put false into pPassMouseDown
   put pBeforeLineNum into mRecordArray ["mBeforeLineNum"]
   put pPassMouseDown into mRecordArray ["mPassMouseDown"]
   return mRecordArray   
end menu_ConstructPluginRecord

getprop set_Names
   return "All,Menus Only"
end set_Names

command menu_AddPluginToSet targetObject, modifierKey, gMenuTitle, pSetName, pObjectTestProp, pPassMouseDown, pBeforeLineNum
   put menu_ConstructPluginArray (targetObject, modifierKey, gMenuTitle, pObjectTestProp, pPassMouseDown, pBeforeLineNum) into menuArray
   library_StoreMenuArray menuArray, pSetName
end menu_AddPluginToSet

function menu_ConstructPluginArray targetObject, modifierKey, gMenuTitle, pObjectTestProp, pPassMouseDown, pBeforeLineNum
   put menu_ConstructPluginRecord (targetObject, modifierKey, gMenuTitle, pObjectTestProp, pPassMouseDown, pBeforeLineNum) into mPluginArray [1]  -- now set plugin (not add)
   
   if pObjectTestProp is empty then put "main_Name" into pObjectTestProp -- use main_Name as default as this is what is needed by revScriptEditor and faster to have only one prop to search
   put the pObjectTestProp of targetObject into objectRefValue
   put mPluginArray into theMenuArray [modifierKey][pObjectTestProp][objectRefValue]      
   return theMenuArray
end menu_ConstructPluginArray

on _
end _

on menu_DisplayPluginArray
   global gOPN_MenuArray
   display_Array gOPN_MenuArray, "gOPN_MenuArray"
end menu_DisplayPluginArray

on menu_ClearPluginArray
   global gOPN_MenuArray
   delete variable gOPN_MenuArray
end menu_ClearPluginArray

on _
end _

on insert_Menu
   return "Global | Menu | Global Cards | Menu"
end insert_Menu


--> Menu | Stack | Menu | Props
-



--> Tree | Field | Menu
-
on menu_DisplayHelp
   put menu_GetHelp ()
end menu_DisplayHelp

on menu_UpdateMenuTable treeField
   put the tree_SelectedIndex of treeField into mTitle
   put menu_GetGlobalController(mTitle) into mController
   script_UpdateMenuTables mController
   lcw_Notify the result
end menu_UpdateMenuTable

on menu_RemoveEntry treeField
   put the tree_SelectedIndex of treeField into mTitle
   put menu_GetGlobalController(mTitle) into mController
   menu_DeleteGlobalTitle
end menu_RemoveEntry


--> Tree | Field | Menu | Props
-
getprop disabled_RemoveEntry
   put the dg_Tree of me into cardTree
   put the tree_SelectedIndex of cardTree into mTitle
   put menu_GetGlobalController(mTitle) into mController
   return exists(mController) is false
end disabled_RemoveEntry


--> Datagrid
-
on CloseFieldEditor pFieldEditor, pRecordView
   if pRecordView is empty then
      put the long id of the target into recordView
   else
      put pRecordView into recordView
   end if
   
   put the title_Text of  of the dg_Tree of me into mTitle
   put menu_GetGlobalController (mTitle) into mController
   
   -- put the unicodetext of pFieldEditor into uText
   put the htmltext of pFieldEditor into someHtml
   put the record_Name of recordView into mPath
   
   menu_SetItemHelp mTitle, mPath, mController, someHtml
end CloseFieldEditor

private function constructDataArrayFromPaths mPaths, globalMenuTitle
   local dgArray
   -- put the title_Text of  of the dg_Tree of me into globalMenuTitle
   addToDataArray mPaths, dgArray, globalMenuTitle
   return dgArray
end constructDataArrayFromPaths

private command addToDataArray mPaths, @dgArray, mTitle
   put menu_GetGlobalController (mTitle) into mController
   
   put keys (dgArray) into indexNums
   put the number of lines of indexNums + 1 into nextNum
   
   set the itemDelimiter to "/"
   repeat for each line mPath in mPaths
      put mPath into dgArray [nextNum]["mPath"]
      
      put menu_GetItemHelp (mTitle, mPath, mController) into someHtml
      put someHtml into dgArray [nextNum]["description"]
      put false into dgArray [nextNum]["isExpanded"]
      add 1 to nextNum
   end repeat
end addToDataArray

on FillInData pDataArray, pRecordView
   put the long id of the target into recordView
   
   put pDataArray ["mPath"] into mPath
   put pDataArray ["description"] into someHtml
   put pDataArray ["isExpanded"] is true into isExpanded
   
   set the record_Name of recordView to mPath
   set the record_HelpHtml of recordView to someHtml
   set the record_IsExpanded of recordView to isExpanded
   
   -- set the menu_Title of recordView to "Tree | Field | Menu"
   -- set the menu_ToolTitle of recordView to "Global | Record | View Info | Menu"
end FillInData


--> Events | Drag
-
getprop drag_Enter
   put the dragDestination into targetObject
   if the dragsource = targetObject then return false
   
   put the view_Object of targetObject into targetView
   if exists(targetView) then
      set the dragAction to "link"
      return true
   else
      set the dragAction to "none"
      return false
   end if
end drag_Enter

on dragEnd
   put the dragDestination into targetObject
   if exists(targetObject) is false then return false
   put the view_Object of targetObject into targetView
   if exists(targetView) is false then return false
   
   put the dragdata ["private"] into mTitle
   if mTitle = "Default Menu" then put empty into mTitle
   
   if the controlKey is "Down" then
      put the menu_ToolTitle of targetView into oTitle
      set the menu_ToolTitle of targetView to mTitle
   else
      put the menu_Title of targetView into oTitle
      set the menu_Title of targetView to mTitle
   end if
   
   put kwote(mTitle) & CR after someInfo
   put "was" && kwote(oTitle) & CR after someInfo
   put the name of targetView & CR after someInfo
   lcw_Notify someInfo, true
end dragEnd


--> Events | Tree
-
-- on mouseUp
   if word 1 of the target = "field" then
      put the clickText into mTitle
      go to card mTitle
   else
      pass mouseUp
   end if
end mouseUp

-- on mouseDoubleUp
   if word 1 of the target = "field" then
      put the clickText into mTitle
      edit the script of cd mTitle
   else
      pass mouseDoubleUp
   end if
end mouseDoubleUp

on tree_MouseDown treeField
   if the controlKey is "Down" then
      -- put the menu_ToolTitle of the tree_Field of me into mTitle -- note not menu_ToolTitle
      menu_PopUp "Global | Tree | Line | Menu"
      return false
   end if
   
   set the tree_DragOn of treeField to true
   put the tree_SelectedIndex of treeField into mTitle
   if mTitle is not "-" then
      set the dragdata ["private"] to mTitle
      drag_SetGlobalStatus true
   end if
end tree_MouseDown

on tree_MouseUp treeField
   put the title_Text of treeField into titleText
   switch titleText
      case "Global Menu Paths"
         put the tree_SelectedIndex of treeField into mPath
         put menu_GetController (mPath)
         break
   end switch
   pass tree_MouseUp
end tree_MouseUp

on tree_MouseDoubleUp treeField
   if the tree_IsLeaf of treeField is false then pass tree_MouseDoubleUp
   
   switch the title_Text of treeField
      case "Global Menu Object Outline"
         put the tree_SelectedPath of treeField into objectPath
         put object_FromPath (objectPath) into someObject
         if exists(someObject) then
            edit the script of someObject
         else
            beep
         end if
         break
      default
         put the tree_SelectedIndex of treeField into mTitle
         menu_EditMenuScript mTitle
   end switch
end tree_MouseDoubleUp


--> Objects
-
getprop card_TreeField
   put the dg_Tree of me into dgTree
   put the card_View ["Tree|Field"] of dgTree into treeField
   return treeField
end card_TreeField

getprop tree_Field
   put the dg_Tree of me into dgTree
   put the body_View of dgTree into bodyView
   return bodyView
end tree_Field

getprop dg_Tree
   return the long id of group 1 of this cd
end dg_Tree
